#!/usr/bin/env ruby
# vim: filetype=ruby

require 'csv'
require 'optparse'
require 'ostruct'

options = OpenStruct.new

parser = OptionParser.new do |opts|
  opts.on("-i ITEMS", "--items ITEMS") do |i|
    options.items_file = i
  end

  opts.on("-b BORROWINGS", "--borrowings BORROWINGS") do |b|
    options.borrowings_file = b
  end
end

begin
  parser.parse!(ARGV)

  raise "Please specify the CSV containing items" unless options.items_file
  raise "Please specify the CSV containing borrowings" unless options.borrowings_file
rescue => e
  STDERR.puts "Error: #{e.message}"
  STDERR.puts
  STDERR.puts parser.help
  exit(1)
end

csv_options = {col_sep: ';'}

# Generate list of barcodes
barcodes = []
CSV.foreach(options.borrowings_file, csv_options) do |row|
  barcodes << row[3]
end

# Generate list of item ids
item_ids = []
CSV.foreach(options.items_file, csv_options) do |row|
  item_ids << row[0]
end

# Generate list of item_copies
item_copies = barcodes.map {|barcode| [barcode, item_ids.sample]}

# Output list of item_copies to CSV
headers = ["barcode", "item_id"]
puts CSV::Row.new(headers, headers, true).to_s(csv_options)
item_copies.each do |item_copy| 
  puts CSV::Row.new(headers, item_copy).to_s(csv_options)
end
