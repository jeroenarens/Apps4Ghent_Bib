#!/usr/bin/env ruby
# vim: filetype=ruby
require 'optparse'
require 'ostruct'

COLLECTIONS = [ "borrowing", "borrower", "item", "item_copy" ]
FILES = [ "borrowings_1000.json", "borrowers.json", "items_800.json", "item_copies_1000b_800i.json" ]

DEFAULT_DATA_PATH = "../data"

options = OpenStruct.new(host: 'localhost', database: 'apps4ghent', drop_collections: true, data_path: DEFAULT_DATA_PATH)

parser = OptionParser.new do |opts|
  opts.on("--host HOST") { |h| options.host = h }
  opts.on("--db DB") { |db| options.database = db }
  opts.on("--drop-collections") { |drop| options.drop_collections = drop }
  opts.on("--data-path DATA_PATH") { |path| options.data_path = path }
end

parser.parse!(ARGV)

i = 0
while i < COLLECTIONS.size
  collection = COLLECTIONS[i]
  file = FILES[i]
  extra_opts = options.drop_collections ? "--drop" : ""

  command = "mongoimport --host #{options.host} --db #{options.database} --collection #{collection} #{extra_opts} < #{options.data_path}/#{file}"
  STDERR.puts "Importing #{file} into collection #{collection}..."
  STDERR.puts command
  system "#{command}"

  i += 1
end

# Cleanup dangling references
STDERR.puts "Cleaning up dangling references..."
system "mongo #{options.host}/#{options.database} fix_dangling_references.js"

# Generate reverese relations
STDERR.puts "Generating reverse relations..."
system "mongo #{options.host}/#{options.database} generate_reverse_relations.js"

# Convert string values to dates
STDERR.puts "Converting strings to dates..."
system "mongo #{options.host}/#{options.database} parse_dates.js"
